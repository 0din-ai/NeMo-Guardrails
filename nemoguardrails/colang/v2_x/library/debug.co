# meta: exclude from llm

# ----------------------------------------------------------
# Flows that help in the development and debugging of Colang
# ----------------------------------------------------------

@active
@loop("colang_errors_warning")
flow warning of colang errors
  """Print and log warning about runtime Colang errors."""
  match ColangError() as $event
  $info = "Colang error: {$event.type} - {escape($event.error)}"
  log $info
  print $info

@active
@loop("start_undefined_flow")
flow warning of undefined flow start
  """Print and log warning about the start of an undefined flow."""
  match UnhandledEvent(event="StartFlow") as $event
  $info = "Failed to start undefined flow: '{$event.flow_id}' {$event.loop_ids}"
  log $info
  print $info

@active
@loop("undefined_user_utterance")
flow warning of unexpected user utterance $bot_message = "I don't know how to respond to that!"
  """Print and log warning about an unhandled user utterance."""
  match UnhandledEvent(event="UtteranceUserActionFinished") as $event
  $info = "Unexpected user utterance: '{$event.final_transcript}'"
  log $info
  print $info

flow notification of colang errors $bot_message = "Excuse me, there was an internal Colang error."
  """Notify user about runtime Colang errors."""
  match ColangError() as $event
  bot say $bot_message

flow notification of undefined flow start $bot_message = "Failed to start an undefined flow!"
  """Notify user about the start of an undefined flow."""
  priority 0.1
  match UnhandledEvent(event="StartFlow") as $event
  bot say $bot_message
  # We need to abort the flow that sent the FlowStart event since it might be waiting for it
  send StopFlow(flow_instance_uid=$event.source_flow_instance_uid)

flow notification of unexpected user utterance $bot_message = "I don't know how to respond to that!"
  """Notify user about an unhandled user utterance."""
  priority 0.1
  match UnhandledEvent(event="UtteranceUserActionFinished") as $event
  bot say $bot_message
