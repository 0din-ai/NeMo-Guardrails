# For all exposed UMIM events and actions we have a wrapper flow to abstract the technical details and unify the usage. 

# include umim_events_and_actions.co

# ----------------------------------
# Bot event and action wrapper flows
# -----------------------------------
@new_interaction_context
flow bot say $text
  await UtteranceBotAction(text=$text) as $action

@new_interaction_context
flow bot started saying $text
  match UtteranceBotAction(text=$text).Started() as $event

@new_interaction_context
flow bot said $text
  match UtteranceBotAction(text=$text).Finished() as $event

@new_interaction_context
flow bot said something
  match UtteranceBotAction().Finished() as $event

@new_interaction_context
flow bot express $expression
  await ExpressionBotAction($expression) as $action

@new_interaction_context
flow bot gesture $gesture
  await GestureBotAction($gesture) as $action

@new_interaction_context
flow bot_move $position
  await PositionChangeBotAction($position) as $action

# -----------------------------------
# User event and action wrapper flows
# -----------------------------------

@new_interaction_context
flow user said $text
  match UtteranceUserAction.Finished(text=$text) as $event

@new_interaction_context
flow user said something
  match UtteranceUserAction.Finished() as $event

# Vision related events and actions

@new_interaction_context
flow user appeared
  match DetectedUserAction.Finished() as $event

@new_interaction_context
flow user disappeared
  match DetectedUserAction.Finished() as $event

@new_interaction_context
flow user became attentive
  match AttentionUserAction.Finished() as $event

@new_interaction_context
flow user became inattentive
  match AttentionUserAction.Finished() as $event