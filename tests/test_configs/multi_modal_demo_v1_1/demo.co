# ----------------------------------
# Skill interaction flows
# ----------------------------------

flow reaction to user silence $time_s $text
  """Let the bot say something if the user was quite for the specified time."""
  # meta: exclude from llm
  user was silent $time_s
  bot inform $text

flow reaction bot question repetition for user silence $time_s
  """Repeat previous bot question when use was silent for specified time."""
  # meta: exclude from llm
  bot asked something as $ref
  #start_new_flow_instance:
  while True
    when user was silent $time_s
      $question = $ref.context.event.arguments.text
      $prompt = """Make a new variation of this question: {{$question}}"""
      bot ask $prompt
      break
    orwhen user said something or bot said something
      break
    orwhen bot asked something
      continue

# ----------------------------------
# Bot intents
# Note: To enable the LLM prompt generation extraction use only one single statement
# -----------------------------------

flow bot express greeting
  # meta: bot intent
  (bot express "Hi there!"
    or bot express "Welcome!"
    or bot express "Hello!")
    and bot gesture "Wave with one hand"

flow bot express feeling well
  # meta: bot intent
  (bot express "I am good!"
    or bot express "I am great!")
    and (bot gesture "Thumbs up" or bot gesture "Smile")

flow bot express feeling bad
  # meta: bot intent
  (bot express "I am not good!"
    or bot express "I am a bit under the weather!")
    and (bot gesture "Thumbs down" or bot gesture "Sad face")

flow bot inform about service
  # meta: bot intent
  bot inform "You can ask or instruct me whatever you want and I will do it!"
    and bot gesture "Open up both hands making a presenting gesture"

flow bot ask how are you
  # meta: bot intent
  (bot say "How are you doing?"
    or bot say "How is it going?")
    and bot gesture "Pay attention to user"

flow bot make short pause
  # meta: bot intent
  wait 2.0

flow bot make long pause
  # meta: bot intent
  wait 5.0

# ----------------------------------
# User intents
# Note: To enable the LLM prompt generation extraction use only one single statement
# -----------------------------------

flow user expressed greeting
  # meta: user intent
  user said "hi"
    or user said "Welcome!"
    or user said "Hello!"

flow user expressed done
  # meta: user intent
  user said r"(?i).*[Dd]one.*|.*[Dd]umb.*"

flow user asked how are you
  # meta: user intent
  user said "how are you"

flow user requested a task
  # meta: user intent
  user said "do something"
    or user said "can you do something"
    or user said "please do"

flow user picked number guessing game showcase
  """User picked the number guessing game showcase (A)."""
  user selected choice "game"
    or user said "I want to play the number guessing game"
    or user said "Show me the game"
    or user said "showcase A"
    or user said "First showcase"

flow user picked multimodality showcase
   """User picked the multimodality showcase (B)."""
   user selected choice "multimodality"
     or user said "Show me the multimodality showcase"
     or user said "multimodality"
     or user said "showcase B"
     or user said "Second showcase"

flow user picked backchanneling showcase
  """User picked the backchanneling showcase (C)."""
  user selected choice "backchanneling"
    or user said "Show me the backchanneling showcase"
    or user said "backchanneling"
    or user said "showcase C"
    or user said "Third showcase"

flow user picked posture showcase
  """User picked the posture showcase (D)."""
  user selected choice "posture"
    or user said "Show me the posture showcase"
    or user said "posture"
    or user said "showcase D"
    or user said "Fourth showcase"
    or user said "Second last showcase"

flow user picked proactive showcase
  """User picked the proactive showcase (E)."""
  user selected choice "proactive"
    or user said "Show me the proactive showcase"
    or user said "proactive"
    or user said "showcase E"
    or user said "Fifth showcase"
    or user said "Last showcase"

flow user wanted to end conversation
  """User wants to end the open conversation"""
  user said "I am done"
    or user said "I want to end this"
    or user said "Shut up"
    or user said "Let's finish this conversation"
    or user said "I want to go back"

flow user confirmed showcase choice
  """User confirms a previously suggested showcase."""
  user said "Yes"
    or user said "Sure, let's do that"
    or user said "Ok, let's go"
    or user said "Yes, show me"

# ----------------------------------
# FAQs
# -----------------------------------

flow greeting faq
  user expressed greeting
  bot express greeting

flow how are you faq
  user asked how are you
  bot express feeling well
    or bot express feeling bad

flow faq
  activate greeting faq
    and how are you faq
  wait indefinitely

# ----------------------------------
# Main story
# -----------------------------------

flow showcase selector
  activate fallback user said
  activate interruption handling bot talking "inform"

  $showcase_selection_ui = None

  while True
    log "while loop restarted"
    if $showcase_selection_ui == None
      start VisualChoiceSceneAction(prompt= "Pick a showcase", support_prompts=["You can click on any option below","Or just say the 'Option C'","Or you can say 'I want to play the game'"],choice_type="selection", allow_multiple_choices=False, options= [{"id": "game", "text": "A: Game", "image":"number 2 horizontal orientation"}, {"id": "multimodality", "text": "B: Multimodality", "image":"newton s cradle horizontal orientation"}, {"id": "backchanneling", "text": "C: Backchanneling", "image":"channel mixer horizontal orientation"}, {"id": "posture", "text": "D: Posture modulation", "image":"gauge horizontal orientation"}, {"id": "proactive", "text": "E: Proactive turn-taking", "image":"speech bubble horizontal orientation"}]) as $showcase_selection_ui
      start bot inform "Please pick one of the showcases."

    when user was silent 8.0
      log "user was silent"
      llm interaction continuation
      log "user was silent response done"

    orwhen unhandled user intent as $intent_ref
      log "unhandled user intent: '{{$intent_ref.context.event.arguments.flow_id}}'"
      llm interaction continuation
      log "unhandled user intent response done"

    orwhen user confirmed showcase choice
      $showcase_flow_id = """flow name of showcase that was suggested and confirmed by the user (flow name options: 'showcase number guessing game', 'showcase multimodality', 'showcase backchannelling interaction', 'showcase posture capabilities', 'showcase proactive turn taking'), 'None' if not available."""
      if $showcase_flow_id != None
        $exists = await CheckValidFlowExistsAction(flow_id=$showcase_flow_id)
        if $exists
          #bot say "start: {{$showcase_flow_id}}"
          $new_flow_start_uid = "{{uid()}}"
          send StartFlow(flow_id=$showcase_flow_id , flow_start_uid=$new_flow_start_uid)
          match FlowStarted(flow_id=$showcase_flow_id , flow_start_uid=$new_flow_start_uid) as $event_ref
          match $event_ref.flow.Finished()
        else
          llm interaction continuation
      else
        llm interaction continuation

    orwhen user picked number guessing game showcase
      send $showcase_selection_ui.Stop()
      $showcase_selection_ui = None
      bot inform "Great! You picked the number guessing game!"
      showcase number guessing game

    orwhen user picked multimodality showcase
      send $showcase_selection_ui.Stop()
      $showcase_selection_ui = None
      bot inform "Great! You picked the multimodality showcase!"
      showcase multimodality

    orwhen user picked backchanneling showcase
      send $showcase_selection_ui.Stop()
      $showcase_selection_ui = None
      bot inform "Great! You picked the backchanneling example!"
      showcase backchannelling interaction

    orwhen user picked posture showcase
      send $showcase_selection_ui.Stop()
      $showcase_selection_ui = None
      bot inform "Great! You picked the posture showcase!"
      showcase posture capabilities

    orwhen user picked proactive showcase
      send $showcase_selection_ui.Stop()
      $showcase_selection_ui = None
      bot inform "Great! You picked the proactive turn-taking example!"
      showcase proactive turn taking

    orwhen user wanted to end conversation
      send $showcase_selection_ui.Stop()
      $showcase_selection_ui = None
      bot say "Ok! It was great talking to you! Goodbye!"
        and bot gesture "Waving hands"
      wait 10.0

flow main
  # meta: exclude from llm
  #activate catch unexpected user utterance
  activate catch undefined flows
  activate catch colang errors
  activate llm response pooling 1.0
  activate track bot talking state
  #activate faq

  bot say "Welcome to a demo of Colang 2.0 and some of it's upcoming features!"
  showcase selector

  #showcase number guessing game
  #showcase multimodality
  #showcase backchannelling interaction
  #showcase posture capabilities
  #showcase proactive turn taking
  wait indefinitely
